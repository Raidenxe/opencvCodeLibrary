#include <opencv2/opencv.hpp>
#include <iostream>

int main()
{
    cv::VideoCapture capture;
    capture.open(0);
    cv::Mat edges;

    while (1)
    {
        cv::Mat IMG;
        capture >> IMG;
        cv::cvtColor(IMG, edges, cv::COLOR_BGR2GRAY);
        cv::GaussianBlur(edges, edges, cv::Size(5, 5), 2, 2);
        std::vector<cv::Vec3f> circles;
        cv::HoughCircles(edges, circles, cv::HOUGH_GRADIENT, 1.5, 10, 200, 100, 0, 0);
        int x_Total;
        int y_Total;
        for (size_t i = 0; i < circles.size(); i++)
        {
            cv::Point center(cvRound(circles[i][0]), cvRound(circles[i][1]));
            int radius = cvRound(circles[i][2]);
            x_Total += cvRound(circles[i][0]);
            y_Total += cvRound(circles[i][1]);
            circle(IMG, center, 3, cv::Scalar(0, 255, 0), -1, 8, 0);
            circle(IMG, center, radius, cv::Scalar(0, 255, 0), -1, 8, 0);
        }
        imshow("test", IMG);
        if (cv::waitKey(30) == 'q')
        {
            break;
        }
    }
}
